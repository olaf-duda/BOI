{"ast":null,"code":"\"use strict\";\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction symbolicateStackTrace(_x) {\n  return _symbolicateStackTrace.apply(this, arguments);\n}\nfunction _symbolicateStackTrace() {\n  _symbolicateStackTrace = _asyncToGenerator(function* (stack) {\n    var baseUrl = typeof window === \"undefined\" ? process.env.EXPO_DEV_SERVER_ORIGIN : window.location.protocol + \"//\" + window.location.host;\n    var response = yield fetch(baseUrl + \"/symbolicate\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        stack: stack\n      })\n    });\n    return yield response.json();\n  });\n  return _symbolicateStackTrace.apply(this, arguments);\n}\nexports.default = symbolicateStackTrace;","map":{"version":3,"names":["symbolicateStackTrace","_x","_symbolicateStackTrace","apply","arguments","_asyncToGenerator","stack","baseUrl","window","process","env","EXPO_DEV_SERVER_ORIGIN","location","protocol","host","response","fetch","method","body","JSON","stringify","json","exports","default"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\modules\\symbolicateStackTrace\\index.ts"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame } from \"stacktrace-parser\";\n\nexport type CodeFrame = {\n  content: string;\n  location?: {\n    row: number;\n    column: number;\n    [key: string]: any;\n  };\n  fileName: string;\n};\n\nexport type SymbolicatedStackTrace = {\n  stack: StackFrame[];\n  codeFrame?: CodeFrame;\n};\n\nasync function symbolicateStackTrace(\n  stack: StackFrame[]\n): Promise<SymbolicatedStackTrace> {\n  const baseUrl =\n    typeof window === \"undefined\"\n      ? process.env.EXPO_DEV_SERVER_ORIGIN\n      : window.location.protocol + \"//\" + window.location.host;\n\n  const response = await fetch(baseUrl + \"/symbolicate\", {\n    method: \"POST\",\n    body: JSON.stringify({ stack }),\n  });\n  return await response.json();\n}\n\nexport default symbolicateStackTrace;\n"],"mappings":";;;;;SAyBeA,qBAAqBA,CAAAC,EAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,uBAAA;EAAAA,sBAAA,GAAAG,iBAAA,CAApC,WACEC,KAAmB;IAEnB,IAAMC,OAAO,GACX,OAAOC,MAAM,KAAK,WAAW,GACzBC,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAClCH,MAAM,CAACI,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGL,MAAM,CAACI,QAAQ,CAACE,IAAI;IAE5D,IAAMC,QAAQ,SAASC,KAAK,CAACT,OAAO,GAAG,cAAc,EAAE;MACrDU,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,KAAK,EAALA;MAAK,CAAE;KAC/B,CAAC;IACF,aAAaS,QAAQ,CAACM,IAAI,EAAE;EAC9B,CAAC;EAAA,OAAAnB,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEDkB,OAAA,CAAAC,OAAA,GAAevB,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}