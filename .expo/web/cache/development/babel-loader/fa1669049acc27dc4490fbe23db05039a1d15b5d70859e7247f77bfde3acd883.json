{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxInspectorSourceMapStatus = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar LogBoxButton_1 = require(\"../UI/LogBoxButton\");\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\nfunction LogBoxInspectorSourceMapStatus(props) {\n  var _ref = (0, react_1.useState)({\n      animation: null,\n      rotate: null\n    }),\n    _ref2 = _slicedToArray(_ref, 2),\n    state = _ref2[0],\n    setState = _ref2[1];\n  (0, react_1.useEffect)(function () {\n    if (props.status === \"PENDING\") {\n      if (state.animation == null) {\n        var animated = new react_native_1.Animated.Value(0);\n        var animation = react_native_1.Animated.loop(react_native_1.Animated.timing(animated, {\n          duration: 2000,\n          easing: react_native_1.Easing.linear,\n          toValue: 1,\n          useNativeDriver: true\n        }));\n        setState({\n          animation: animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\"0deg\", \"360deg\"]\n          })\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null\n        });\n      }\n    }\n    return function () {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n  var image;\n  var color;\n  switch (props.status) {\n    case \"FAILED\":\n      image = require(\"@expo/metro-runtime/assets/alert-triangle.png\");\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case \"PENDING\":\n      image = require(\"@expo/metro-runtime/assets/loader.png\");\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n  if (props.status === \"COMPLETE\" || image == null) {\n    return null;\n  }\n  return react_1.default.createElement(LogBoxButton_1.LogBoxButton, {\n    backgroundColor: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    hitSlop: {\n      bottom: 8,\n      left: 8,\n      right: 8,\n      top: 8\n    },\n    onPress: props.onPress,\n    style: styles.root\n  }, react_1.default.createElement(react_native_1.Animated.Image, {\n    source: image,\n    tintColor: color !== null && color !== void 0 ? color : LogBoxStyle.getTextColor(0.4),\n    style: [styles.image, state.rotate == null || props.status !== \"PENDING\" ? null : {\n      transform: [{\n        rotate: state.rotate\n      }]\n    }]\n  }), react_1.default.createElement(react_native_1.Text, {\n    style: [styles.text, {\n      color: color\n    }]\n  }, \"Source Map\"));\n}\nexports.LogBoxInspectorSourceMapStatus = LogBoxInspectorSourceMapStatus;\nvar styles = react_native_1.StyleSheet.create({\n  root: {\n    alignItems: \"center\",\n    borderRadius: 12,\n    flexDirection: \"row\",\n    height: 24,\n    paddingHorizontal: 8\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});","map":{"version":3,"names":["react_1","__importStar","require","react_native_1","LogBoxButton_1","LogBoxStyle","LogBoxInspectorSourceMapStatus","props","_ref","useState","animation","rotate","_ref2","_slicedToArray","state","setState","useEffect","status","animated","Animated","Value","loop","timing","duration","easing","Easing","linear","toValue","useNativeDriver","interpolate","inputRange","outputRange","start","stop","image","color","getErrorColor","getWarningColor","default","createElement","LogBoxButton","backgroundColor","pressed","getBackgroundColor","hitSlop","bottom","left","right","top","onPress","style","styles","root","Image","source","tintColor","getTextColor","transform","Text","text","exports","StyleSheet","create","alignItems","borderRadius","flexDirection","height","paddingHorizontal","width","marginEnd","fontSize","includeFontPadding","lineHeight"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\overlay\\LogBoxInspectorSourceMapStatus.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  StyleSheet,\n  Text,\n} from \"react-native\";\n\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onPress?: ((event: GestureResponderEvent) => void) | null;\n  status: \"COMPLETE\" | \"FAILED\" | \"NONE\" | \"PENDING\";\n};\n\nexport function LogBoxInspectorSourceMapStatus(props: Props) {\n  const [state, setState] = useState<{\n    animation: null | Animated.CompositeAnimation;\n    rotate: null | Animated.AnimatedInterpolation<string>;\n  }>({\n    animation: null,\n    rotate: null,\n  });\n\n  useEffect(() => {\n    if (props.status === \"PENDING\") {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          })\n        );\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\"0deg\", \"360deg\"],\n          }),\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n\n  let image;\n  let color;\n  switch (props.status) {\n    case \"FAILED\":\n      image = require(\"@expo/metro-runtime/assets/alert-triangle.png\");\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case \"PENDING\":\n      image = require(\"@expo/metro-runtime/assets/loader.png\");\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n\n  if (props.status === \"COMPLETE\" || image == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: \"transparent\",\n        pressed: LogBoxStyle.getBackgroundColor(1),\n      }}\n      hitSlop={{ bottom: 8, left: 8, right: 8, top: 8 }}\n      onPress={props.onPress}\n      style={styles.root}\n    >\n      <Animated.Image\n        source={image}\n        tintColor={color ?? LogBoxStyle.getTextColor(0.4)}\n        style={[\n          styles.image,\n          state.rotate == null || props.status !== \"PENDING\"\n            ? null\n            : { transform: [{ rotate: state.rotate }] },\n        ]}\n      />\n      <Text style={[styles.text, { color }]}>Source Map</Text>\n    </LogBoxButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: \"center\",\n    borderRadius: 12,\n    flexDirection: \"row\",\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}