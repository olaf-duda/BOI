{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importDefault(require(\"react\"));\nvar client_1 = __importDefault(require(\"react-dom/client\"));\nvar currentRoot = null;\nexports.default = {\n  show: function show() {\n    if (currentRoot) {\n      return;\n    }\n    var ErrorOverlay = require(\"../../ErrorOverlay\").default;\n    var div = document.createElement(\"div\");\n    div.id = \"error-overlay\";\n    document.body.appendChild(div);\n    currentRoot = client_1.default.createRoot(div);\n    currentRoot.render(react_1.default.createElement(ErrorOverlay, null));\n  },\n  hide: function hide() {\n    if (currentRoot) {\n      currentRoot.unmount();\n      currentRoot = null;\n    }\n    var div = document.getElementById(\"error-overlay\");\n    div === null || div === void 0 ? void 0 : div.remove();\n  }\n};","map":{"version":3,"names":["react_1","__importDefault","require","client_1","currentRoot","exports","default","show","ErrorOverlay","div","document","createElement","id","body","appendChild","createRoot","render","hide","unmount","getElementById","remove"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\modules\\NativeLogBox\\index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nlet currentRoot: ReactDOM.Root | null = null;\nexport default {\n  show() {\n    if (currentRoot) {\n      return;\n    }\n    const ErrorOverlay: React.ComponentType =\n      require(\"../../ErrorOverlay\").default;\n    // Create a new div with ID `error-overlay` element and render LogBoxInspector into it.\n    const div = document.createElement(\"div\");\n    div.id = \"error-overlay\";\n    document.body.appendChild(div);\n\n    currentRoot = ReactDOM.createRoot(div);\n    currentRoot.render(<ErrorOverlay />);\n  },\n  hide() {\n    // Remove div with ID `error-overlay`\n    if (currentRoot) {\n      currentRoot.unmount();\n      currentRoot = null;\n    }\n    const div = document.getElementById(\"error-overlay\");\n    div?.remove();\n  },\n};\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,eAAA,CAAAC,OAAA;AACA,IAAIE,WAAW,GAAyB,IAAI;AAC5CC,OAAA,CAAAC,OAAA,GAAe;EACbC,IAAI,WAAAA,KAAA;IACF,IAAIH,WAAW,EAAE;MACf;;IAEF,IAAMI,YAAY,GAChBN,OAAO,qBAAqB,CAAC,CAACI,OAAO;IAEvC,IAAMG,GAAG,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzCF,GAAG,CAACG,EAAE,GAAG,eAAe;IACxBF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,GAAG,CAAC;IAE9BL,WAAW,GAAGD,QAAA,CAAAG,OAAQ,CAACS,UAAU,CAACN,GAAG,CAAC;IACtCL,WAAW,CAACY,MAAM,CAAChB,OAAA,CAAAM,OAAA,CAAAK,aAAA,CAACH,YAAY,OAAG,CAAC;EACtC,CAAC;EACDS,IAAI,WAAAA,KAAA;IAEF,IAAIb,WAAW,EAAE;MACfA,WAAW,CAACc,OAAO,EAAE;MACrBd,WAAW,GAAG,IAAI;;IAEpB,IAAMK,GAAG,GAAGC,QAAQ,CAACS,cAAc,CAAC,eAAe,CAAC;IACpDV,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEW,MAAM,EAAE;EACf;CACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}