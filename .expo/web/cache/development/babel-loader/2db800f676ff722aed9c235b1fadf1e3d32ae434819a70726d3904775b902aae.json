{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxInspectorHeader = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar LogContext_1 = require(\"../Data/LogContext\");\nvar LogBoxButton_1 = require(\"../UI/LogBoxButton\");\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\nfunction LogBoxInspectorHeader(props) {\n  var _ref = (0, LogContext_1.useLogs)(),\n    selectedIndex = _ref.selectedLogIndex,\n    logs = _ref.logs;\n  var total = logs.length;\n  if (props.level === \"syntax\") {\n    return react_1.default.createElement(react_native_1.View, {\n      style: [styles.safeArea, styles[props.level]]\n    }, react_1.default.createElement(react_native_1.View, {\n      style: styles.header\n    }, react_1.default.createElement(react_native_1.View, {\n      style: styles.title\n    }, react_1.default.createElement(react_native_1.Text, {\n      style: styles.titleText\n    }, \"Failed to compile\"))));\n  }\n  var prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  var nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n  var titleText = `Log ${selectedIndex + 1} of ${total}`;\n  return react_1.default.createElement(react_native_1.View, {\n    style: [styles.safeArea, styles[props.level]]\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.header\n  }, react_1.default.createElement(LogBoxInspectorHeaderButton, {\n    disabled: total <= 1,\n    level: props.level,\n    image: require(\"@expo/metro-runtime/assets/chevron-left.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(prevIndex);\n    }\n  }), react_1.default.createElement(react_native_1.View, {\n    style: styles.title\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.titleText\n  }, titleText)), react_1.default.createElement(LogBoxInspectorHeaderButton, {\n    disabled: total <= 1,\n    level: props.level,\n    image: require(\"@expo/metro-runtime/assets/chevron-right.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(nextIndex);\n    }\n  })));\n}\nexports.LogBoxInspectorHeader = LogBoxInspectorHeader;\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    static: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\nfunction LogBoxInspectorHeaderButton(props) {\n  return react_1.default.createElement(LogBoxButton_1.LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? undefined : props.onPress,\n    style: headerStyles.button\n  }, props.disabled ? null : react_1.default.createElement(react_native_1.Image, {\n    source: props.image,\n    tintColor: LogBoxStyle.getTextColor(),\n    style: headerStyles.buttonImage\n  }));\n}\nvar headerStyles = react_native_1.StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8\n  }\n});\nvar styles = react_native_1.StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 8,\n    height: react_native_1.Platform.select({\n      default: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: react_native_1.Platform.OS !== \"ios\" ? react_native_1.StatusBar.currentHeight : 40\n  }\n});","map":{"version":3,"names":["react_1","__importDefault","require","react_native_1","LogContext_1","LogBoxButton_1","LogBoxStyle","__importStar","LogBoxInspectorHeader","props","_ref","useLogs","selectedIndex","selectedLogIndex","logs","total","length","level","default","createElement","View","style","styles","safeArea","header","title","Text","titleText","prevIndex","nextIndex","LogBoxInspectorHeaderButton","disabled","image","onPress","onSelectIndex","exports","backgroundForLevel","warn","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","static","LogBoxButton","backgroundColor","undefined","headerStyles","button","Image","source","tintColor","getTextColor","buttonImage","StyleSheet","create","alignItems","justifyContent","aspectRatio","marginRight","marginLeft","borderRadius","height","width","getFatalColor","getWarningColor","getErrorColor","flexDirection","paddingHorizontal","Platform","select","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","OS","StatusBar","currentHeight"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\overlay\\LogBoxInspectorHeader.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport {\n  Image,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport type { LogLevel } from \"../Data/LogBoxLog\";\nimport { useLogs } from \"../Data/LogContext\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === \"syntax\") {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-left.png\")}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-right.png\")}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    static: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  }[level]);\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}\n    >\n      {props.disabled ? null : (\n        <Image\n          source={props.image}\n          tintColor={LogBoxStyle.getTextColor()}\n          style={headerStyles.buttonImage}\n        />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    aspectRatio: 1,\n    marginRight: 6,\n    marginLeft: 6,\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  static: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n    paddingHorizontal: 8,\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS !== \"ios\" ? StatusBar.currentHeight : 40,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAA0B,IAAAC,cAAA,GAAAD,OAAA;AAW1B,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,cAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAC,YAAA,CAAAL,OAAA;AAOA,SAAgBM,qBAAqBA,CAACC,KAAY;EAChD,IAAAC,IAAA,GAAkD,IAAAN,YAAA,CAAAO,OAAO,GAAE;IAAjCC,aAAa,GAAAF,IAAA,CAA/BG,gBAAgB;IAAiBC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;EAC7C,IAAMC,KAAK,GAAGD,IAAI,CAACE,MAAM;EAEzB,IAAIP,KAAK,CAACQ,KAAK,KAAK,QAAQ,EAAE;IAC5B,OACEjB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACb,KAAK,CAACQ,KAAK,CAAC;IAAC,GACjDjB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACE;IAAM,GACxBxB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACG;IAAK,GACvBzB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAuB,IAAI;MAACL,KAAK,EAAEC,MAAM,CAACK;IAAS,uBAA0B,CAClD,CACF,CACF;;EAIX,IAAMC,SAAS,GAAGhB,aAAa,GAAG,CAAC,GAAG,CAAC,GAAGG,KAAK,GAAG,CAAC,GAAGH,aAAa,GAAG,CAAC;EACvE,IAAMiB,SAAS,GAAGjB,aAAa,GAAG,CAAC,GAAGG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGH,aAAa,GAAG,CAAC;EAEvE,IAAMe,SAAS,GAAG,OAAOf,aAAa,GAAG,CAAC,OAAOG,KAAK,EAAE;EAExD,OACEf,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACb,KAAK,CAACQ,KAAK,CAAC;EAAC,GACjDjB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACE;EAAM,GACxBxB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAACW,2BAA2B;IAC1BC,QAAQ,EAAEhB,KAAK,IAAI,CAAC;IACpBE,KAAK,EAAER,KAAK,CAACQ,KAAK;IAClBe,KAAK,EAAE9B,OAAO,CAAC,6CAA6C,CAAC;IAC7D+B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMxB,KAAK,CAACyB,aAAa,CAACN,SAAS,CAAC;IAAA;EAAA,EAC7C,EACF5B,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACG;EAAK,GACvBzB,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAuB,IAAI;IAACL,KAAK,EAAEC,MAAM,CAACK;EAAS,GAAGA,SAAS,CAAQ,CAC5C,EACP3B,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAACW,2BAA2B;IAC1BC,QAAQ,EAAEhB,KAAK,IAAI,CAAC;IACpBE,KAAK,EAAER,KAAK,CAACQ,KAAK;IAClBe,KAAK,EAAE9B,OAAO,CAAC,8CAA8C,CAAC;IAC9D+B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMxB,KAAK,CAACyB,aAAa,CAACL,SAAS,CAAC;IAAA;EAAA,EAC7C,CACG,CACF;AAEX;AA1CAM,OAAA,CAAA3B,qBAAA,GAAAA,qBAAA;AA4CA,IAAM4B,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAInB,KAAe;EAAA,OACxC;IACCoB,IAAI,EAAE;MACJnB,OAAO,EAAE,aAAa;MACtBoB,OAAO,EAAEhC,WAAW,CAACiC,mBAAmB;KACzC;IACDC,KAAK,EAAE;MACLtB,OAAO,EAAE,aAAa;MACtBoB,OAAO,EAAEhC,WAAW,CAACmC,iBAAiB;KACvC;IACDC,KAAK,EAAE;MACLxB,OAAO,EAAE,aAAa;MACtBoB,OAAO,EAAEhC,WAAW,CAACqC,iBAAiB;KACvC;IACDC,MAAM,EAAE;MACN1B,OAAO,EAAE,aAAa;MACtBoB,OAAO,EAAEhC,WAAW,CAACqC,iBAAiB;KACvC;IACDE,MAAM,EAAE;MACN3B,OAAO,EAAE,aAAa;MACtBoB,OAAO,EAAEhC,WAAW,CAACqC,iBAAiB;;GAEzC,CAAC1B,KAAK,CAAC;AAAA,CAAC;AAEX,SAASa,2BAA2BA,CAACrB,KAKpC;EACC,OACET,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAACd,cAAA,CAAAyC,YAAY;IACXC,eAAe,EAAEX,kBAAkB,CAAC3B,KAAK,CAACQ,KAAK,CAAC;IAChDgB,OAAO,EAAExB,KAAK,CAACsB,QAAQ,GAAGiB,SAAS,GAAGvC,KAAK,CAACwB,OAAO;IACnDZ,KAAK,EAAE4B,YAAY,CAACC;EAAM,GAEzBzC,KAAK,CAACsB,QAAQ,GAAG,IAAI,GACpB/B,OAAA,CAAAkB,OAAA,CAAAC,aAAA,CAAChB,cAAA,CAAAgD,KAAK;IACJC,MAAM,EAAE3C,KAAK,CAACuB,KAAK;IACnBqB,SAAS,EAAE/C,WAAW,CAACgD,YAAY,EAAE;IACrCjC,KAAK,EAAE4B,YAAY,CAACM;EAAW,EAElC,CACY;AAEnB;AAEA,IAAMN,YAAY,GAAG9C,cAAA,CAAAqD,UAAU,CAACC,MAAM,CAAC;EACrCP,MAAM,EAAE;IACNQ,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE;GACf;EACDR,WAAW,EAAE;IACXS,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;;CAEV,CAAC;AAEF,IAAM3C,MAAM,GAAGnB,cAAA,CAAAqD,UAAU,CAACC,MAAM,CAAC;EAC/Bb,MAAM,EAAE;IACNG,eAAe,EAAEzC,WAAW,CAAC4D,aAAa;GAC3C;EACDrB,MAAM,EAAE;IACNE,eAAe,EAAEzC,WAAW,CAAC4D,aAAa;GAC3C;EACDxB,KAAK,EAAE;IACLK,eAAe,EAAEzC,WAAW,CAAC4D,aAAa;GAC3C;EACD7B,IAAI,EAAE;IACJU,eAAe,EAAEzC,WAAW,CAAC6D,eAAe;GAC7C;EACD3B,KAAK,EAAE;IACLO,eAAe,EAAEzC,WAAW,CAAC8D,aAAa;GAC3C;EACD5C,MAAM,EAAE;IACN6C,aAAa,EAAE,KAAK;IACpBX,UAAU,EAAE,QAAQ;IAEpBY,iBAAiB,EAAE,CAAC;IACpBN,MAAM,EAAE7D,cAAA,CAAAoE,QAAQ,CAACC,MAAM,CAAC;MACtBtD,OAAO,EAAE,EAAE;MACXuD,GAAG,EAAE;KACN;GACF;EACDhD,KAAK,EAAE;IACLiC,UAAU,EAAE,QAAQ;IACpBgB,IAAI,EAAE,CAAC;IACPf,cAAc,EAAE;GACjB;EACDhC,SAAS,EAAE;IACTgD,KAAK,EAAErE,WAAW,CAACgD,YAAY,EAAE;IACjCsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE;GACb;EACDxD,QAAQ,EAAE;IACRyD,UAAU,EAAE7E,cAAA,CAAAoE,QAAQ,CAACU,EAAE,KAAK,KAAK,GAAG9E,cAAA,CAAA+E,SAAS,CAACC,aAAa,GAAG;;CAEjE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}