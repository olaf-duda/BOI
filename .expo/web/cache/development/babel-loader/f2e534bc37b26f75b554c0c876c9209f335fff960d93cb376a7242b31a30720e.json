{"ast":null,"code":"\"use strict\";\nvar protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\nvar messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\nmessageSocket.onmessage = function (message) {\n  var data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case \"sendDevCommand\":\n      switch (data.params.name) {\n        case \"reload\":\n          window.location.reload();\n          break;\n      }\n      break;\n    case \"reload\":\n      window.location.reload();\n      break;\n    case \"devMenu\":\n      break;\n  }\n};","map":{"version":3,"names":["protocol","window","location","messageSocket","WebSocket","host","onmessage","message","data","JSON","parse","String","method","params","name","reload"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\messageSocket.ts"],"sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\nconst protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\nconst messageSocket = new WebSocket(\n  `${protocol}://${window.location.host}/message`\n);\nmessageSocket.onmessage = (message) => {\n  const data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case \"sendDevCommand\":\n      switch (data.params.name) {\n        case \"reload\":\n          window.location.reload();\n          break;\n      }\n      break;\n    case \"reload\":\n      window.location.reload();\n      break;\n    case \"devMenu\":\n      // no-op\n      break;\n  }\n};\n"],"mappings":";AAKA,IAAMA,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;AACrE,IAAMG,aAAa,GAAG,IAAIC,SAAS,CACjC,GAAGJ,QAAQ,MAAMC,MAAM,CAACC,QAAQ,CAACG,IAAI,UAAU,CAChD;AACDF,aAAa,CAACG,SAAS,GAAG,UAACC,OAAO,EAAI;EACpC,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACJ,OAAO,CAACC,IAAI,CAAC,CAAC;EAC7C,QAAQA,IAAI,CAACI,MAAM;IACjB,KAAK,gBAAgB;MACnB,QAAQJ,IAAI,CAACK,MAAM,CAACC,IAAI;QACtB,KAAK,QAAQ;UACXb,MAAM,CAACC,QAAQ,CAACa,MAAM,EAAE;UACxB;;MAEJ;IACF,KAAK,QAAQ;MACXd,MAAM,CAACC,QAAQ,CAACa,MAAM,EAAE;MACxB;IACF,KAAK,SAAS;MAEZ;;AAEN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}