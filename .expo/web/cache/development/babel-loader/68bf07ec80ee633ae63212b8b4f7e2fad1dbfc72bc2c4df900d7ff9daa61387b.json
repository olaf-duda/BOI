{"ast":null,"code":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStringifySafeWithLimits = void 0;\nfunction createStringifySafeWithLimits(limits) {\n  var _limits$maxDepth = limits.maxDepth,\n    maxDepth = _limits$maxDepth === void 0 ? Number.POSITIVE_INFINITY : _limits$maxDepth,\n    _limits$maxStringLimi = limits.maxStringLimit,\n    maxStringLimit = _limits$maxStringLimi === void 0 ? Number.POSITIVE_INFINITY : _limits$maxStringLimi,\n    _limits$maxArrayLimit = limits.maxArrayLimit,\n    maxArrayLimit = _limits$maxArrayLimit === void 0 ? Number.POSITIVE_INFINITY : _limits$maxArrayLimit,\n    _limits$maxObjectKeys = limits.maxObjectKeysLimit,\n    maxObjectKeysLimit = _limits$maxObjectKeys === void 0 ? Number.POSITIVE_INFINITY : _limits$maxObjectKeys;\n  var stack = [];\n  function replacer(_key, value) {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n    if (typeof value === \"string\") {\n      var truncatedString = \"...(truncated)...\";\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n    var retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value.slice(0, maxArrayLimit).concat([`... extra ${value.length - maxArrayLimit} values truncated ...`]);\n      }\n    } else {\n      if (typeof value !== \"object\") {\n        throw new Error(\"This was already found earlier\");\n      }\n      var keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        retval = {};\n        for (var k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        var truncatedKey = \"...(truncated keys)...\";\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n  return function stringifySafe(arg) {\n    if (arg === undefined) {\n      return \"undefined\";\n    } else if (arg === null) {\n      return \"null\";\n    } else if (typeof arg === \"function\") {\n      try {\n        return arg.toString();\n      } catch (_unused) {\n        return \"[function unknown]\";\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + \": \" + arg.message;\n    } else {\n      try {\n        var ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch (_unused2) {\n        if (typeof arg.toString === \"function\") {\n          try {\n            return arg.toString();\n          } catch (_unused3) {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\nexports.createStringifySafeWithLimits = createStringifySafeWithLimits;\nvar stringifySafe = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50\n});\nexports.default = stringifySafe;","map":{"version":3,"names":["createStringifySafeWithLimits","limits","_limits$maxDepth","maxDepth","Number","POSITIVE_INFINITY","_limits$maxStringLimi","maxStringLimit","_limits$maxArrayLimit","maxArrayLimit","_limits$maxObjectKeys","maxObjectKeysLimit","stack","replacer","_key","value","length","shift","truncatedString","substring","retval","Array","isArray","slice","concat","Error","keys","Object","k","truncatedKey","unshift","stringifySafe","arg","undefined","toString","_unused","name","message","ret","JSON","stringify","_unused2","_unused3","exports","default"],"sources":["C:\\Users\\Bartek\\react_native_boi\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\modules\\stringifySafe\\index.ts"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {\n  maxDepth?: number;\n  maxStringLimit?: number;\n  maxArrayLimit?: number;\n  maxObjectKeysLimit?: number;\n}): (foo: any) => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack: any[] = [];\n  function replacer(this: unknown, _key: string, value: any): any {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === \"string\") {\n      const truncatedString = \"...(truncated)...\";\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    let retval = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([\n            `... extra ${value.length - maxArrayLimit} values truncated ...`,\n          ]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      if (typeof value !== \"object\") {\n        throw new Error(\"This was already found earlier\");\n      }\n      const keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = {};\n        for (const k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = \"...(truncated keys)...\";\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: any): string {\n    if (arg === undefined) {\n      return \"undefined\";\n    } else if (arg === null) {\n      return \"null\";\n    } else if (typeof arg === \"function\") {\n      try {\n        return arg.toString();\n      } catch {\n        return \"[function unknown]\";\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + \": \" + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch {\n        if (typeof arg.toString === \"function\") {\n          try {\n            // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}