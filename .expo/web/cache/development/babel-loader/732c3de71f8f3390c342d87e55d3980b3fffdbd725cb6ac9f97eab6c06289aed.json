{"ast":null,"code":"export function matchDynamicName(name) {\n  var _name$match;\n  return (_name$match = name.match(/^\\[([^[\\](?:\\.\\.\\.)]+?)\\]$/)) == null ? void 0 : _name$match[1];\n}\nexport function matchDeepDynamicRouteName(name) {\n  var _name$match2;\n  return (_name$match2 = name.match(/^\\[\\.\\.\\.([^/]+?)\\]$/)) == null ? void 0 : _name$match2[1];\n}\nexport function matchGroupName(name) {\n  var _name$match3;\n  return (_name$match3 = name.match(/^(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+)\\).*?$/)) == null ? void 0 : _name$match3[1];\n}\nexport function getNameFromFilePath(name) {\n  return removeSupportedExtensions(removeFileSystemDots(name));\n}\nexport function getContextKey(name) {\n  var normal = \"/\" + getNameFromFilePath(name);\n  if (!normal.endsWith(\"_layout\")) {\n    return normal;\n  }\n  return normal.replace(/\\/?_layout$/, \"\");\n}\nexport function removeSupportedExtensions(name) {\n  return name.replace(/\\.[jt]sx?$/g, \"\");\n}\nexport function removeFileSystemDots(filePath) {\n  return filePath.replace(/^(?:\\.\\.?\\/)+/g, \"\");\n}\nexport function stripGroupSegmentsFromPath(path) {\n  return path.split(\"/\").reduce(function (acc, v) {\n    if (matchGroupName(v) == null) {\n      acc.push(v);\n    }\n    return acc;\n  }, []).join(\"/\");\n}\nexport function stripInvisibleSegmentsFromPath(path) {\n  return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, \"\");\n}","map":{"version":3,"names":["matchDynamicName","name","_name$match","match","matchDeepDynamicRouteName","_name$match2","matchGroupName","_name$match3","getNameFromFilePath","removeSupportedExtensions","removeFileSystemDots","getContextKey","normal","endsWith","replace","filePath","stripGroupSegmentsFromPath","path","split","reduce","acc","v","push","join","stripInvisibleSegmentsFromPath"],"sources":["C:/Users/Bartek/react_native_boi/node_modules/expo-router/src/matchers.tsx"],"sourcesContent":["/** Match `[page]` -> `page` */\nexport function matchDynamicName(name: string): string | undefined {\n  // Don't match `...` or `[` or `]` inside the brackets\n  // eslint-disable-next-line no-useless-escape\n  return name.match(/^\\[([^[\\](?:\\.\\.\\.)]+?)\\]$/)?.[1];\n}\n\n/** Match `[...page]` -> `page` */\nexport function matchDeepDynamicRouteName(name: string): string | undefined {\n  return name.match(/^\\[\\.\\.\\.([^/]+?)\\]$/)?.[1];\n}\n\n/** Match `(page)` -> `page` */\nexport function matchGroupName(name: string): string | undefined {\n  return name.match(/^(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+)\\).*?$/)?.[1];\n}\n\nexport function getNameFromFilePath(name: string): string {\n  return removeSupportedExtensions(removeFileSystemDots(name));\n}\n\nexport function getContextKey(name: string): string {\n  // The root path is `` (empty string) so always prepend `/` to ensure\n  // there is some value.\n  const normal = \"/\" + getNameFromFilePath(name);\n  if (!normal.endsWith(\"_layout\")) {\n    return normal;\n  }\n  return normal.replace(/\\/?_layout$/, \"\");\n}\n\n/** Remove `.js`, `.ts`, `.jsx`, `.tsx` */\nexport function removeSupportedExtensions(name: string): string {\n  return name.replace(/\\.[jt]sx?$/g, \"\");\n}\n\n// Remove any amount of `./` and `../` from the start of the string\nexport function removeFileSystemDots(filePath: string): string {\n  return filePath.replace(/^(?:\\.\\.?\\/)+/g, \"\");\n}\n\nexport function stripGroupSegmentsFromPath(path: string): string {\n  return path\n    .split(\"/\")\n    .reduce((acc, v) => {\n      if (matchGroupName(v) == null) {\n        acc.push(v);\n      }\n      return acc;\n    }, [] as string[])\n    .join(\"/\");\n}\n\nexport function stripInvisibleSegmentsFromPath(path: string): string {\n  return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, \"\");\n}\n"],"mappings":"AACA,OAAO,SAASA,gBAAgBA,CAACC,IAAY,EAAsB;EAAA,IAAAC,WAAA;EAGjE,QAAAA,WAAA,GAAOD,IAAI,CAACE,KAAK,CAAC,4BAA4B,CAAC,qBAAxCD,WAAA,CAA2C,CAAC,CAAC;AACtD;AAGA,OAAO,SAASE,yBAAyBA,CAACH,IAAY,EAAsB;EAAA,IAAAI,YAAA;EAC1E,QAAAA,YAAA,GAAOJ,IAAI,CAACE,KAAK,CAAC,sBAAsB,CAAC,qBAAlCE,YAAA,CAAqC,CAAC,CAAC;AAChD;AAGA,OAAO,SAASC,cAAcA,CAACL,IAAY,EAAsB;EAAA,IAAAM,YAAA;EAC/D,QAAAA,YAAA,GAAON,IAAI,CAACE,KAAK,CAAC,mCAAmC,CAAC,qBAA/CI,YAAA,CAAkD,CAAC,CAAC;AAC7D;AAEA,OAAO,SAASC,mBAAmBA,CAACP,IAAY,EAAU;EACxD,OAAOQ,yBAAyB,CAACC,oBAAoB,CAACT,IAAI,CAAC,CAAC;AAC9D;AAEA,OAAO,SAASU,aAAaA,CAACV,IAAY,EAAU;EAGlD,IAAMW,MAAM,GAAG,GAAG,GAAGJ,mBAAmB,CAACP,IAAI,CAAC;EAC9C,IAAI,CAACW,MAAM,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IAC/B,OAAOD,MAAM;EACf;EACA,OAAOA,MAAM,CAACE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;AAC1C;AAGA,OAAO,SAASL,yBAAyBA,CAACR,IAAY,EAAU;EAC9D,OAAOA,IAAI,CAACa,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;AACxC;AAGA,OAAO,SAASJ,oBAAoBA,CAACK,QAAgB,EAAU;EAC7D,OAAOA,QAAQ,CAACD,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAC/C;AAEA,OAAO,SAASE,0BAA0BA,CAACC,IAAY,EAAU;EAC/D,OAAOA,IAAI,CACRC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,UAACC,GAAG,EAAEC,CAAC,EAAK;IAClB,IAAIf,cAAc,CAACe,CAAC,CAAC,IAAI,IAAI,EAAE;MAC7BD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;IACb;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,EAAc,CAAC,CACjBG,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,OAAO,SAASC,8BAA8BA,CAACP,IAAY,EAAU;EACnE,OAAOD,0BAA0B,CAACC,IAAI,CAAC,CAACH,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}